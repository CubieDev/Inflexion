
#!/usr/bin/env python
# -*- coding: utf-8 -*-

##########################################
## NOTE: This module was autogenerated. ##
## Contains no user-servicable parts!!! ##
##########################################

import unittest

from inflexion import Adjective


class TestAdjectiveIsSingular(unittest.TestCase):
    '''
    test_args has the format [
        {
            "in":     ..., # (required)
            "out":    ..., # (required)
            "desc":   ..., # (optional)
            "kwargs": ...  # (optional)
        }, ...
    ]
    '''
    test_args = [
        {'in': 'a', 'out': True},
        {'in': 'my', 'out': True},
        {'in': 'our', 'out': False},
        {'in': 'some', 'out': False},
        {'in': 'that', 'out': True},
        {'in': 'their', 'out': True},
        {'in': 'these', 'out': False},
        {'in': 'this', 'out': True},
        {'in': 'those', 'out': False},
        {'in': 'your', 'out': True},
    ]

    def test_adjective_is_singular(self):
        for test_case in self.test_args:
            with self.subTest():
                # Expand test_case with default cases, if optional keys are not provided
                test_case = {**test_case, **{
                    "desc": f"is_singular({repr(test_case['in'])}) => {repr(test_case['out'])}",
                    "kwargs": dict()
                }}
                self.assertEqual(Adjective(test_case["in"]).is_singular(**test_case["kwargs"]), test_case["out"], test_case["desc"])


if __name__ == "__main__":
    unittest.main()
